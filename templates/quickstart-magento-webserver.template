{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "QS() Magento2 License: Apache 2.0 (Please do not remove) Nov,14,2016 ",
    "Parameters": {
        "NotificationEmail": {
            "Description": "EMail address to notify if there are any scaling operations",
            "Type": "String",
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "must be a valid email address."
        },
        "KeyPair": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "id_rsa_aws",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "WebServerMinSize": {
            "Description": "Minimum No of web server instances",
            "Default": "1",
            "Type": "Number"
        },
        "WebServerMaxSize": {
            "Description": "Maximum No of web server instances",
            "Default": "1",
            "Type": "Number"
        },
        "WebServerDesiredCapacity": {
            "Description": "Desired No of web server instances",
            "Default": "1",
            "Type": "Number"
        },
        "WebServerInstanceType": {
            "Type": "String",
            "Description": "Web Server node instance type",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Choose an instance type.",
            "Default": "t2.medium"
        },
        "WebServerSubnets": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "A list of subnet identifiers of Amazon VPCs where the WebServer Autoscaling would be launched.",
            "Default": "",
            "ConstraintDescription": "must be list of existing subnet Ids"
        },
        "ElasticLoadBalancerSubnets": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "A list of public subnet identifiers of Amazon VPCs where the ElasticLoadBalancer would be launched.",
            "Default": "",
            "ConstraintDescription": "must be list of existing Public subnet Ids"
        },
        "QuickStartS3URL": {
            "ConstraintDescription": "S3Url",
            "Default": "https://s3.amazonaws.com",
            "Description": "AWS S3 Url",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "hashicorp/consul/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "VPCID": {
            "Description": "VPC ID",
            "Type": "AWS::EC2::VPC::Id"
        },
        "AccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Description": "The CIDR IP range that is permitted to access Consul Note: a value of 0.0.0.0/0 will allow access from ANY ip address",
            "Type": "String"
        },
        "MagentoReleaseMedia": {
            "Description": "Amazon S3 path to download magento .tar.gz file (s3://mybucket/magento-1.9.2.1.tar-2015-08-03-06-35-45.gz)",
            "Default": "",
            "Type": "String"
        },
        "DBMasterUserPassword": {
            "Type": "String",
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho": "True",
            "Default": "Admin-123456",
            "Description": "RDS MySQL Stack"
        },
        "DBMasterUsername": {
            "Type": "String",
            "Default": "admin",
            "Description": "RDS MySQL Stack"
        },
        "RDSMySQLStack": {
            "Type": "String",
            "Default": "",
            "Description": "RDS MySQL Stack"
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUX": "amzn-ami-hvm-2016.09.1.20161221-x86_64-gp2"
            },
            "ap-northeast-1": {
                "AMZNLINUX": "ami-9f0c67f8"
            },
            "ap-northeast-2": {
                "AMZNLINUX": "ami-94bb6dfa"
            },
            "ap-south-1": {
                "AMZNLINUX": "ami-9fc7b0f0"
            },
            "ap-southeast-1": {
                "AMZNLINUX": "ami-4dd6782e"
            },
            "ap-southeast-2": {
                "AMZNLINUX": "ami-28cff44b"
            },
            "eu-central-1": {
                "AMZNLINUX": "ami-211ada4e"
            },
            "eu-west-1": {
                "AMZNLINUX": "ami-c51e3eb6"
            },
            "sa-east-1": {
                "AMZNLINUX": "ami-bb40d8d7"
            },
            "us-east-1": {
                "AMZNLINUX": "ami-9be6f38c"
            },
            "us-west-1": {
                "AMZNLINUX": "ami-b73d6cd7"
            },
            "us-west-2": {
                "AMZNLINUX": "ami-1e299d7e"
            }
        },
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-gov-west-1": {
                "Partition": "aws-us-gov",
                "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Conditions": {
        "AllowNotificationEmail": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NotificationEmail"
                        },
                        ""
                    ]
                }
            ]
        }
    },
    "Resources": {
        "NotificationTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": {
                            "Ref": "NotificationEmail"
                        },
                        "Protocol": "email"
                    }
                ]
            }
        },
        "WebServerScaleUpPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "WebServerAsg"
                },
                "Cooldown": "60",
                "ScalingAdjustment": "1"
            }
        },
        "WebServerScaleDownPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "WebServerAsg"
                },
                "Cooldown": "60",
                "ScalingAdjustment": "-1"
            }
        },
        "CPUAlarmHigh": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "90",
                "AlarmActions": [
                    {
                        "Ref": "WebServerScaleUpPolicy"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "WebServerAsg"
                        }
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        },
        "CPUAlarmLow": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "70",
                "AlarmActions": [
                    {
                        "Ref": "WebServerScaleDownPolicy"
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "WebServerAsg"
                        }
                    }
                ],
                "ComparisonOperator": "LessThanThreshold"
            }
        },
        "NewIamInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "Instance-Limited-Role",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:*",
                                        "ec2:Describe*",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:AttachVolume",
                                        "ec2:CreateTags",
                                        "ec2:CreateVolume",
                                        "ec2:RunInstances",
                                        "ec2:StartInstances",
                                        "ec2:DeleteVolume",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:CreateSnapshot"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:DescribeStackResource",
                                        "cloudformation:DescribeStackResources",
                                        "cloudformation:GetTemplate",
                                        "cloudformation:List*"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "autoscaling:DescribeAccountLimits",
                                        "autoscaling:DescribeAdjustmentTypes",
                                        "autoscaling:DescribeAutoScalingGroups",
                                        "autoscaling:DescribeAutoScalingInstances",
                                        "autoscaling:DescribeAutoScalingNotificationTypes",
                                        "autoscaling:DescribeLaunchConfigurations",
                                        "autoscaling:DescribePolicies",
                                        "autoscaling:DescribeTags"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:GetItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:UpdateTable"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "NewIamInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "NewIamInstanceRole"
                    }
                ]
            }
        },
        "WebServerSecGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access and HTTP from the load balancer only",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupId": {
                            "Ref": "ElasticLoadBalancerSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupId": {
                            "Ref": "ElasticLoadBalancerSecurityGroup"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WebServerSecGroup"
                    }
                ]
            }
        },
        "WebServerAsg": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "WebServerLC"
                },
                "MinSize": {
                    "Ref": "WebServerMinSize"
                },
                "MaxSize": {
                    "Ref": "WebServerMaxSize"
                },
                "DesiredCapacity": {
                    "Ref": "WebServerDesiredCapacity"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "ElasticLoadBalancer"
                    }
                ],
                "VPCZoneIdentifier": {
                    "Ref": "WebServerSubnets"
                },
                "NotificationConfiguration": {
                    "TopicARN": {
                        "Ref": "NotificationTopic"
                    },
                    "NotificationTypes": [
                        "autoscaling:EC2_INSTANCE_LAUNCH",
                        "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                        "autoscaling:EC2_INSTANCE_TERMINATE",
                        "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Web Server"
                                ]
                            ]
                        },
                        "PropagateAtLaunch": "true"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M",
                    "Count": "1"
                }
            }
        },
        "WebServerLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "Comment": "Install a web server application",
                "AWS::CloudFormation::Init": {
                    "config": {
                        "packages": {
                            "yum": {
                                "nfs-utils": []
                            }
                        },
                        "/etc/cfn/cfn-hup.conf": {
                            "content": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "[main]\n",
                                        "stack=",
                                        {
                                            "Ref": "AWS::StackId"
                                        },
                                        "\n",
                                        "region=",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "\n"
                                    ]
                                ]
                            },
                            "mode": "000400",
                            "owner": "root",
                            "group": "root"
                        },
                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                            "content": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "[cfn-auto-reloader-hook]\n",
                                        "triggers=post.update\n",
                                        "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                                        "action=/opt/aws/bin/cfn-init -v ",
                                        "         --stack ",
                                        {
                                            "Ref": "AWS::StackName"
                                        },
                                        "         --resource LaunchConfig ",
                                        "         --region ",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "\n",
                                        "runas=root\n"
                                    ]
                                ]
                            }
                        },
                        "commands": {
                            "01_createdir": {
                                "command": "mkdir -p /mnt"
                            },
                            "02_permissions": {
                                "command": "chown ec2-user:ec2-user /mnt"
                            },
                            "03_mount_fstab": {
                                "command": {
                                    "Fn::Sub": "echo \"${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0\" >> /etc/fstab"
                                }
                            },
                            "04_mount": {
                                "command": "mount -a -t nfs4"
                            }
                        }
                    },
                    "services": {
                        "sysvinit": {
                            "httpd": {
                                "enabled": "true",
                                "ensureRunning": "true"
                            },
                            "cfn-hup": {
                                "enabled": "true",
                                "ensureRunning": "true",
                                "files": [
                                    "/etc/cfn/cfn-hup.conf",
                                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                ]
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": {
                    "Ref": "WebServerInstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecGroup"
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "NewIamInstanceProfile"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMZNLINUX"
                    ]
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "sudo yum update -y\n",
                                "sudo yum update -y aws-cfn-bootstrap\n",
                                "mkdir -p /home/ec2-user/misc\n",
                                "wget https://s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                "/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "/latest/scripts/unzip/linux/download.sh --output-document /home/ec2-user/misc/download.sh\n",
                                "wget https://s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                "/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "/latest/scripts/unzip/linux/config.sh --output-document /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export PARENTSTACKNAME=",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export PARENTSTACKID=",
                                            {
                                                "Ref": "AWS::StackId"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MAGENTOMEDIAS3=",
                                            {
                                                "Ref": "MagentoReleaseMedia"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MAGENTORELEASEMEDIA=",
                                            {
                                                "Ref": "MagentoReleaseMedia"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MAGENTOSAMPLEDATA=",
                                            {
                                                "Ref": "MagentoReleaseMedia"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DBMasterUsername=",
                                            {
                                                "Ref": "DBMasterUsername"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export ELBURL=",
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "http://",
                                                        {
                                                            "Fn::GetAtt": [
                                                                "ElasticLoadBalancer",
                                                                "DNSName"
                                                            ]
                                                        }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DBMasterUserPassword=",
                                            {
                                                "Ref": "DBMasterUserPassword"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export RDSMySQLStack=",
                                            {
                                                "Ref": "RDSMySQLStack"
                                            }
                                        ]
                                    ]
                                },
                                " >> /home/ec2-user/misc/config.sh\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource WebServerLC ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "sh /home/ec2-user/misc/download.sh -b ",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                "/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource WebServerAsg ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "EFSMountTargetSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for EFS Mount Target",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "2049",
                        "ToPort": "2049",
                        "SourceSecurityGroupId": {
                            "Ref": "WebServerSecGroup"
                        }
                    }
                ]
            }
        },
        "FileSystem": {
            "Type": "AWS::EFS::FileSystem",
            "Properties": {
                "PerformanceMode": "generalPurpose"
            }
        },
        "MountTarget1": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
                "FileSystemId": {
                    "Ref": "FileSystem"
                },
                "SubnetId": {
                    "Fn::Select": [
                        "0",
                        {
                            "Ref": "WebServerSubnets"
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "EFSMountTargetSecurityGroup"
                    }
                ]
            }
        },
        "MountTarget2": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
                "FileSystemId": {
                    "Ref": "FileSystem"
                },
                "SubnetId": {
                    "Fn::Select": [
                        "1",
                        {
                            "Ref": "WebServerSubnets"
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "EFSMountTargetSecurityGroup"
                    }
                ]
            }
        },
        "ElasticLoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP/HTTPS access on port 80 and 443",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ElasticLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ELBQuickStart"
                    }
                ],
                "Subnets": {
                    "Ref": "ElasticLoadBalancerSubnets"
                },
                "SecurityGroups": [
                    {
                        "Ref": "ElasticLoadBalancerSecurityGroup"
                    }
                ],
                "CrossZone": "true",
                "LBCookieStickinessPolicy": [
                    {
                        "PolicyName": "MagentoELBStickyPolicy"
                    }
                ],
                "Listeners": [
                    {
                        "LoadBalancerPort": "80",
                        "InstancePort": "80",
                        "Protocol": "HTTP",
                        "PolicyNames": [
                            "MagentoELBStickyPolicy"
                        ]
                    }
                ],
                "HealthCheck": {
                    "Target": "HTTP:80/phpinfo.php",
                    "HealthyThreshold": "3",
                    "UnhealthyThreshold": "5",
                    "Interval": "30",
                    "Timeout": "5"
                },
                "ConnectionDrainingPolicy": {
                    "Enabled": "true",
                    "Timeout": "60"
                }
            }
        }
    },
    "Outputs": {
        "URL": {
            "Description": "The URL of the website",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "ElasticLoadBalancer",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    }
}